/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class ANilLiteral extends PLiteral
{
    private TNil _nil_;

    public ANilLiteral()
    {
    }

    public ANilLiteral(
        TNil _nil_)
    {
        setNil(_nil_);

    }
    public Object clone()
    {
        return new ANilLiteral(
            (TNil) cloneNode(_nil_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANilLiteral(this);
    }

    public TNil getNil()
    {
        return _nil_;
    }

    public void setNil(TNil node)
    {
        if(_nil_ != null)
        {
            _nil_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _nil_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_nil_);
    }

    void removeChild(Node child)
    {
        if(_nil_ == child)
        {
            _nil_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_nil_ == oldChild)
        {
            setNil((TNil) newChild);
            return;
        }

    }
}
