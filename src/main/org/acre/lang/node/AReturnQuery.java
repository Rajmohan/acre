/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class AReturnQuery extends PReturnQuery
{
    private TReturn _return_;
    private PQuery _query_;

    public AReturnQuery()
    {
    }

    public AReturnQuery(
        TReturn _return_,
        PQuery _query_)
    {
        setReturn(_return_);

        setQuery(_query_);

    }
    public Object clone()
    {
        return new AReturnQuery(
            (TReturn) cloneNode(_return_),
            (PQuery) cloneNode(_query_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAReturnQuery(this);
    }

    public TReturn getReturn()
    {
        return _return_;
    }

    public void setReturn(TReturn node)
    {
        if(_return_ != null)
        {
            _return_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _return_ = node;
    }

    public PQuery getQuery()
    {
        return _query_;
    }

    public void setQuery(PQuery node)
    {
        if(_query_ != null)
        {
            _query_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _query_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_return_)
            + toString(_query_);
    }

    void removeChild(Node child)
    {
        if(_return_ == child)
        {
            _return_ = null;
            return;
        }

        if(_query_ == child)
        {
            _query_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_return_ == oldChild)
        {
            setReturn((TReturn) newChild);
            return;
        }

        if(_query_ == oldChild)
        {
            setQuery((PQuery) newChild);
            return;
        }

    }
}
