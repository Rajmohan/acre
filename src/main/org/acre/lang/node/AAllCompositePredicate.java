/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class AAllCompositePredicate extends PCompositePredicate
{
    private TAll _all_;

    public AAllCompositePredicate()
    {
    }

    public AAllCompositePredicate(
        TAll _all_)
    {
        setAll(_all_);

    }
    public Object clone()
    {
        return new AAllCompositePredicate(
            (TAll) cloneNode(_all_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAllCompositePredicate(this);
    }

    public TAll getAll()
    {
        return _all_;
    }

    public void setAll(TAll node)
    {
        if(_all_ != null)
        {
            _all_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _all_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_all_);
    }

    void removeChild(Node child)
    {
        if(_all_ == child)
        {
            _all_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_all_ == oldChild)
        {
            setAll((TAll) newChild);
            return;
        }

    }
}
