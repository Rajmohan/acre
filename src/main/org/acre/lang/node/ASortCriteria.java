/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class ASortCriteria extends PSortCriteria
{
    private PSortCriterion _sortCriterion_;
    private PSortCriteriaT _sortCriteriaT_;

    public ASortCriteria()
    {
    }

    public ASortCriteria(
        PSortCriterion _sortCriterion_,
        PSortCriteriaT _sortCriteriaT_)
    {
        setSortCriterion(_sortCriterion_);

        setSortCriteriaT(_sortCriteriaT_);

    }
    public Object clone()
    {
        return new ASortCriteria(
            (PSortCriterion) cloneNode(_sortCriterion_),
            (PSortCriteriaT) cloneNode(_sortCriteriaT_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASortCriteria(this);
    }

    public PSortCriterion getSortCriterion()
    {
        return _sortCriterion_;
    }

    public void setSortCriterion(PSortCriterion node)
    {
        if(_sortCriterion_ != null)
        {
            _sortCriterion_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _sortCriterion_ = node;
    }

    public PSortCriteriaT getSortCriteriaT()
    {
        return _sortCriteriaT_;
    }

    public void setSortCriteriaT(PSortCriteriaT node)
    {
        if(_sortCriteriaT_ != null)
        {
            _sortCriteriaT_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _sortCriteriaT_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_sortCriterion_)
            + toString(_sortCriteriaT_);
    }

    void removeChild(Node child)
    {
        if(_sortCriterion_ == child)
        {
            _sortCriterion_ = null;
            return;
        }

        if(_sortCriteriaT_ == child)
        {
            _sortCriteriaT_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_sortCriterion_ == oldChild)
        {
            setSortCriterion((PSortCriterion) newChild);
            return;
        }

        if(_sortCriteriaT_ == oldChild)
        {
            setSortCriteriaT((PSortCriteriaT) newChild);
            return;
        }

    }
}
