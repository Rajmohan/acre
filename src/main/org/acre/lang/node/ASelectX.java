/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class ASelectX extends PSelectX
{
    private TSelect _select_;
    private TDistinct _distinct_;
    private PProjectionAttributes _projectionAttributes_;
    private PFromClause _fromClause_;
    private PWhereClause _whereClause_;
    private PGroupClause _groupClause_;
    private POrderClause _orderClause_;

    public ASelectX()
    {
    }

    public ASelectX(
        TSelect _select_,
        TDistinct _distinct_,
        PProjectionAttributes _projectionAttributes_,
        PFromClause _fromClause_,
        PWhereClause _whereClause_,
        PGroupClause _groupClause_,
        POrderClause _orderClause_)
    {
        setSelect(_select_);

        setDistinct(_distinct_);

        setProjectionAttributes(_projectionAttributes_);

        setFromClause(_fromClause_);

        setWhereClause(_whereClause_);

        setGroupClause(_groupClause_);

        setOrderClause(_orderClause_);

    }
    public Object clone()
    {
        return new ASelectX(
            (TSelect) cloneNode(_select_),
            (TDistinct) cloneNode(_distinct_),
            (PProjectionAttributes) cloneNode(_projectionAttributes_),
            (PFromClause) cloneNode(_fromClause_),
            (PWhereClause) cloneNode(_whereClause_),
            (PGroupClause) cloneNode(_groupClause_),
            (POrderClause) cloneNode(_orderClause_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASelectX(this);
    }

    public TSelect getSelect()
    {
        return _select_;
    }

    public void setSelect(TSelect node)
    {
        if(_select_ != null)
        {
            _select_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _select_ = node;
    }

    public TDistinct getDistinct()
    {
        return _distinct_;
    }

    public void setDistinct(TDistinct node)
    {
        if(_distinct_ != null)
        {
            _distinct_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _distinct_ = node;
    }

    public PProjectionAttributes getProjectionAttributes()
    {
        return _projectionAttributes_;
    }

    public void setProjectionAttributes(PProjectionAttributes node)
    {
        if(_projectionAttributes_ != null)
        {
            _projectionAttributes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _projectionAttributes_ = node;
    }

    public PFromClause getFromClause()
    {
        return _fromClause_;
    }

    public void setFromClause(PFromClause node)
    {
        if(_fromClause_ != null)
        {
            _fromClause_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _fromClause_ = node;
    }

    public PWhereClause getWhereClause()
    {
        return _whereClause_;
    }

    public void setWhereClause(PWhereClause node)
    {
        if(_whereClause_ != null)
        {
            _whereClause_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _whereClause_ = node;
    }

    public PGroupClause getGroupClause()
    {
        return _groupClause_;
    }

    public void setGroupClause(PGroupClause node)
    {
        if(_groupClause_ != null)
        {
            _groupClause_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _groupClause_ = node;
    }

    public POrderClause getOrderClause()
    {
        return _orderClause_;
    }

    public void setOrderClause(POrderClause node)
    {
        if(_orderClause_ != null)
        {
            _orderClause_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _orderClause_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_select_)
            + toString(_distinct_)
            + toString(_projectionAttributes_)
            + toString(_fromClause_)
            + toString(_whereClause_)
            + toString(_groupClause_)
            + toString(_orderClause_);
    }

    void removeChild(Node child)
    {
        if(_select_ == child)
        {
            _select_ = null;
            return;
        }

        if(_distinct_ == child)
        {
            _distinct_ = null;
            return;
        }

        if(_projectionAttributes_ == child)
        {
            _projectionAttributes_ = null;
            return;
        }

        if(_fromClause_ == child)
        {
            _fromClause_ = null;
            return;
        }

        if(_whereClause_ == child)
        {
            _whereClause_ = null;
            return;
        }

        if(_groupClause_ == child)
        {
            _groupClause_ = null;
            return;
        }

        if(_orderClause_ == child)
        {
            _orderClause_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_select_ == oldChild)
        {
            setSelect((TSelect) newChild);
            return;
        }

        if(_distinct_ == oldChild)
        {
            setDistinct((TDistinct) newChild);
            return;
        }

        if(_projectionAttributes_ == oldChild)
        {
            setProjectionAttributes((PProjectionAttributes) newChild);
            return;
        }

        if(_fromClause_ == oldChild)
        {
            setFromClause((PFromClause) newChild);
            return;
        }

        if(_whereClause_ == oldChild)
        {
            setWhereClause((PWhereClause) newChild);
            return;
        }

        if(_groupClause_ == oldChild)
        {
            setGroupClause((PGroupClause) newChild);
            return;
        }

        if(_orderClause_ == oldChild)
        {
            setOrderClause((POrderClause) newChild);
            return;
        }

    }
}
