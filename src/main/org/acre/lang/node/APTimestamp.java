/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class APTimestamp extends PPTimestamp
{
    private TTimestamp _timestamp_;
    private TQuote _q1_;
    private PDateContent _dateContent_;
    private PTimeContent _timeContent_;
    private TQuote _q2_;

    public APTimestamp()
    {
    }

    public APTimestamp(
        TTimestamp _timestamp_,
        TQuote _q1_,
        PDateContent _dateContent_,
        PTimeContent _timeContent_,
        TQuote _q2_)
    {
        setTimestamp(_timestamp_);

        setQ1(_q1_);

        setDateContent(_dateContent_);

        setTimeContent(_timeContent_);

        setQ2(_q2_);

    }
    public Object clone()
    {
        return new APTimestamp(
            (TTimestamp) cloneNode(_timestamp_),
            (TQuote) cloneNode(_q1_),
            (PDateContent) cloneNode(_dateContent_),
            (PTimeContent) cloneNode(_timeContent_),
            (TQuote) cloneNode(_q2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPTimestamp(this);
    }

    public TTimestamp getTimestamp()
    {
        return _timestamp_;
    }

    public void setTimestamp(TTimestamp node)
    {
        if(_timestamp_ != null)
        {
            _timestamp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _timestamp_ = node;
    }

    public TQuote getQ1()
    {
        return _q1_;
    }

    public void setQ1(TQuote node)
    {
        if(_q1_ != null)
        {
            _q1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _q1_ = node;
    }

    public PDateContent getDateContent()
    {
        return _dateContent_;
    }

    public void setDateContent(PDateContent node)
    {
        if(_dateContent_ != null)
        {
            _dateContent_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _dateContent_ = node;
    }

    public PTimeContent getTimeContent()
    {
        return _timeContent_;
    }

    public void setTimeContent(PTimeContent node)
    {
        if(_timeContent_ != null)
        {
            _timeContent_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _timeContent_ = node;
    }

    public TQuote getQ2()
    {
        return _q2_;
    }

    public void setQ2(TQuote node)
    {
        if(_q2_ != null)
        {
            _q2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _q2_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_timestamp_)
            + toString(_q1_)
            + toString(_dateContent_)
            + toString(_timeContent_)
            + toString(_q2_);
    }

    void removeChild(Node child)
    {
        if(_timestamp_ == child)
        {
            _timestamp_ = null;
            return;
        }

        if(_q1_ == child)
        {
            _q1_ = null;
            return;
        }

        if(_dateContent_ == child)
        {
            _dateContent_ = null;
            return;
        }

        if(_timeContent_ == child)
        {
            _timeContent_ = null;
            return;
        }

        if(_q2_ == child)
        {
            _q2_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_timestamp_ == oldChild)
        {
            setTimestamp((TTimestamp) newChild);
            return;
        }

        if(_q1_ == oldChild)
        {
            setQ1((TQuote) newChild);
            return;
        }

        if(_dateContent_ == oldChild)
        {
            setDateContent((PDateContent) newChild);
            return;
        }

        if(_timeContent_ == oldChild)
        {
            setTimeContent((PTimeContent) newChild);
            return;
        }

        if(_q2_ == oldChild)
        {
            setQ2((TQuote) newChild);
            return;
        }

    }
}
