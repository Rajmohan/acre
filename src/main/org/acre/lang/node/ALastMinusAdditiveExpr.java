/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class ALastMinusAdditiveExpr extends PAdditiveExpr
{
    private PAdditiveExpr _additiveExpr_;
    private TMinus _minus_;
    private TIdentifier _identifier_;

    public ALastMinusAdditiveExpr()
    {
    }

    public ALastMinusAdditiveExpr(
        PAdditiveExpr _additiveExpr_,
        TMinus _minus_,
        TIdentifier _identifier_)
    {
        setAdditiveExpr(_additiveExpr_);

        setMinus(_minus_);

        setIdentifier(_identifier_);

    }
    public Object clone()
    {
        return new ALastMinusAdditiveExpr(
            (PAdditiveExpr) cloneNode(_additiveExpr_),
            (TMinus) cloneNode(_minus_),
            (TIdentifier) cloneNode(_identifier_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALastMinusAdditiveExpr(this);
    }

    public PAdditiveExpr getAdditiveExpr()
    {
        return _additiveExpr_;
    }

    public void setAdditiveExpr(PAdditiveExpr node)
    {
        if(_additiveExpr_ != null)
        {
            _additiveExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _additiveExpr_ = node;
    }

    public TMinus getMinus()
    {
        return _minus_;
    }

    public void setMinus(TMinus node)
    {
        if(_minus_ != null)
        {
            _minus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _minus_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_additiveExpr_)
            + toString(_minus_)
            + toString(_identifier_);
    }

    void removeChild(Node child)
    {
        if(_additiveExpr_ == child)
        {
            _additiveExpr_ = null;
            return;
        }

        if(_minus_ == child)
        {
            _minus_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_additiveExpr_ == oldChild)
        {
            setAdditiveExpr((PAdditiveExpr) newChild);
            return;
        }

        if(_minus_ == oldChild)
        {
            setMinus((TMinus) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

    }
}
