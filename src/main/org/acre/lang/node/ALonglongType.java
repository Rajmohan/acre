/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class ALonglongType extends PType
{
    private TLong _l1_;
    private TLong _l2_;

    public ALonglongType()
    {
    }

    public ALonglongType(
        TLong _l1_,
        TLong _l2_)
    {
        setL1(_l1_);

        setL2(_l2_);

    }
    public Object clone()
    {
        return new ALonglongType(
            (TLong) cloneNode(_l1_),
            (TLong) cloneNode(_l2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALonglongType(this);
    }

    public TLong getL1()
    {
        return _l1_;
    }

    public void setL1(TLong node)
    {
        if(_l1_ != null)
        {
            _l1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _l1_ = node;
    }

    public TLong getL2()
    {
        return _l2_;
    }

    public void setL2(TLong node)
    {
        if(_l2_ != null)
        {
            _l2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _l2_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_l1_)
            + toString(_l2_);
    }

    void removeChild(Node child)
    {
        if(_l1_ == child)
        {
            _l1_ = null;
            return;
        }

        if(_l2_ == child)
        {
            _l2_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_l1_ == oldChild)
        {
            setL1((TLong) newChild);
            return;
        }

        if(_l2_ == oldChild)
        {
            setL2((TLong) newChild);
            return;
        }

    }
}
