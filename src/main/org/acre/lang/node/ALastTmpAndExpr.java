/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class ALastTmpAndExpr extends PTmpAndExpr
{
    private PTmpAndExpr _tmpAndExpr_;
    private TAnd _and_;
    private TIdentifier _identifier_;

    public ALastTmpAndExpr()
    {
    }

    public ALastTmpAndExpr(
        PTmpAndExpr _tmpAndExpr_,
        TAnd _and_,
        TIdentifier _identifier_)
    {
        setTmpAndExpr(_tmpAndExpr_);

        setAnd(_and_);

        setIdentifier(_identifier_);

    }
    public Object clone()
    {
        return new ALastTmpAndExpr(
            (PTmpAndExpr) cloneNode(_tmpAndExpr_),
            (TAnd) cloneNode(_and_),
            (TIdentifier) cloneNode(_identifier_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALastTmpAndExpr(this);
    }

    public PTmpAndExpr getTmpAndExpr()
    {
        return _tmpAndExpr_;
    }

    public void setTmpAndExpr(PTmpAndExpr node)
    {
        if(_tmpAndExpr_ != null)
        {
            _tmpAndExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tmpAndExpr_ = node;
    }

    public TAnd getAnd()
    {
        return _and_;
    }

    public void setAnd(TAnd node)
    {
        if(_and_ != null)
        {
            _and_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _and_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_tmpAndExpr_)
            + toString(_and_)
            + toString(_identifier_);
    }

    void removeChild(Node child)
    {
        if(_tmpAndExpr_ == child)
        {
            _tmpAndExpr_ = null;
            return;
        }

        if(_and_ == child)
        {
            _and_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_tmpAndExpr_ == oldChild)
        {
            setTmpAndExpr((PTmpAndExpr) newChild);
            return;
        }

        if(_and_ == oldChild)
        {
            setAnd((TAnd) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

    }
}
