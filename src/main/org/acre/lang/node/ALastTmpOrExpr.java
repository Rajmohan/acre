/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class ALastTmpOrExpr extends PTmpOrExpr
{
    private PTmpOrExpr _tmpOrExpr_;
    private TOr _or_;
    private TIdentifier _identifier_;

    public ALastTmpOrExpr()
    {
    }

    public ALastTmpOrExpr(
        PTmpOrExpr _tmpOrExpr_,
        TOr _or_,
        TIdentifier _identifier_)
    {
        setTmpOrExpr(_tmpOrExpr_);

        setOr(_or_);

        setIdentifier(_identifier_);

    }
    public Object clone()
    {
        return new ALastTmpOrExpr(
            (PTmpOrExpr) cloneNode(_tmpOrExpr_),
            (TOr) cloneNode(_or_),
            (TIdentifier) cloneNode(_identifier_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALastTmpOrExpr(this);
    }

    public PTmpOrExpr getTmpOrExpr()
    {
        return _tmpOrExpr_;
    }

    public void setTmpOrExpr(PTmpOrExpr node)
    {
        if(_tmpOrExpr_ != null)
        {
            _tmpOrExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tmpOrExpr_ = node;
    }

    public TOr getOr()
    {
        return _or_;
    }

    public void setOr(TOr node)
    {
        if(_or_ != null)
        {
            _or_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _or_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_tmpOrExpr_)
            + toString(_or_)
            + toString(_identifier_);
    }

    void removeChild(Node child)
    {
        if(_tmpOrExpr_ == child)
        {
            _tmpOrExpr_ = null;
            return;
        }

        if(_or_ == child)
        {
            _or_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_tmpOrExpr_ == oldChild)
        {
            setTmpOrExpr((PTmpOrExpr) newChild);
            return;
        }

        if(_or_ == oldChild)
        {
            setOr((TOr) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

    }
}
