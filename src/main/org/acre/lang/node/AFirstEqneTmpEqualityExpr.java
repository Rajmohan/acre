/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class AFirstEqneTmpEqualityExpr extends PTmpEqualityExpr
{
    private TIdentifier _identifier_;
    private PEqne _eqne_;
    private PCompositePredicate _compositePredicate_;
    private PTmpRelationalExpr _tmpRelationalExpr_;

    public AFirstEqneTmpEqualityExpr()
    {
    }

    public AFirstEqneTmpEqualityExpr(
        TIdentifier _identifier_,
        PEqne _eqne_,
        PCompositePredicate _compositePredicate_,
        PTmpRelationalExpr _tmpRelationalExpr_)
    {
        setIdentifier(_identifier_);

        setEqne(_eqne_);

        setCompositePredicate(_compositePredicate_);

        setTmpRelationalExpr(_tmpRelationalExpr_);

    }
    public Object clone()
    {
        return new AFirstEqneTmpEqualityExpr(
            (TIdentifier) cloneNode(_identifier_),
            (PEqne) cloneNode(_eqne_),
            (PCompositePredicate) cloneNode(_compositePredicate_),
            (PTmpRelationalExpr) cloneNode(_tmpRelationalExpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFirstEqneTmpEqualityExpr(this);
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public PEqne getEqne()
    {
        return _eqne_;
    }

    public void setEqne(PEqne node)
    {
        if(_eqne_ != null)
        {
            _eqne_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _eqne_ = node;
    }

    public PCompositePredicate getCompositePredicate()
    {
        return _compositePredicate_;
    }

    public void setCompositePredicate(PCompositePredicate node)
    {
        if(_compositePredicate_ != null)
        {
            _compositePredicate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _compositePredicate_ = node;
    }

    public PTmpRelationalExpr getTmpRelationalExpr()
    {
        return _tmpRelationalExpr_;
    }

    public void setTmpRelationalExpr(PTmpRelationalExpr node)
    {
        if(_tmpRelationalExpr_ != null)
        {
            _tmpRelationalExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tmpRelationalExpr_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_identifier_)
            + toString(_eqne_)
            + toString(_compositePredicate_)
            + toString(_tmpRelationalExpr_);
    }

    void removeChild(Node child)
    {
        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

        if(_eqne_ == child)
        {
            _eqne_ = null;
            return;
        }

        if(_compositePredicate_ == child)
        {
            _compositePredicate_ = null;
            return;
        }

        if(_tmpRelationalExpr_ == child)
        {
            _tmpRelationalExpr_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(_eqne_ == oldChild)
        {
            setEqne((PEqne) newChild);
            return;
        }

        if(_compositePredicate_ == oldChild)
        {
            setCompositePredicate((PCompositePredicate) newChild);
            return;
        }

        if(_tmpRelationalExpr_ == oldChild)
        {
            setTmpRelationalExpr((PTmpRelationalExpr) newChild);
            return;
        }

    }
}
