/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class AOrderClause extends POrderClause
{
    private TOrder _order_;
    private TBy _by_;
    private PSortCriteria _sortCriteria_;

    public AOrderClause()
    {
    }

    public AOrderClause(
        TOrder _order_,
        TBy _by_,
        PSortCriteria _sortCriteria_)
    {
        setOrder(_order_);

        setBy(_by_);

        setSortCriteria(_sortCriteria_);

    }
    public Object clone()
    {
        return new AOrderClause(
            (TOrder) cloneNode(_order_),
            (TBy) cloneNode(_by_),
            (PSortCriteria) cloneNode(_sortCriteria_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOrderClause(this);
    }

    public TOrder getOrder()
    {
        return _order_;
    }

    public void setOrder(TOrder node)
    {
        if(_order_ != null)
        {
            _order_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _order_ = node;
    }

    public TBy getBy()
    {
        return _by_;
    }

    public void setBy(TBy node)
    {
        if(_by_ != null)
        {
            _by_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _by_ = node;
    }

    public PSortCriteria getSortCriteria()
    {
        return _sortCriteria_;
    }

    public void setSortCriteria(PSortCriteria node)
    {
        if(_sortCriteria_ != null)
        {
            _sortCriteria_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _sortCriteria_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_order_)
            + toString(_by_)
            + toString(_sortCriteria_);
    }

    void removeChild(Node child)
    {
        if(_order_ == child)
        {
            _order_ = null;
            return;
        }

        if(_by_ == child)
        {
            _by_ = null;
            return;
        }

        if(_sortCriteria_ == child)
        {
            _sortCriteria_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_order_ == oldChild)
        {
            setOrder((TOrder) newChild);
            return;
        }

        if(_by_ == oldChild)
        {
            setBy((TBy) newChild);
            return;
        }

        if(_sortCriteria_ == oldChild)
        {
            setSortCriteria((PSortCriteria) newChild);
            return;
        }

    }
}
