/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class AFieldList extends PFieldList
{
    private PFieldList _fieldList_;
    private TComma _comma_;
    private PField _field_;

    public AFieldList()
    {
    }

    public AFieldList(
        PFieldList _fieldList_,
        TComma _comma_,
        PField _field_)
    {
        setFieldList(_fieldList_);

        setComma(_comma_);

        setField(_field_);

    }
    public Object clone()
    {
        return new AFieldList(
            (PFieldList) cloneNode(_fieldList_),
            (TComma) cloneNode(_comma_),
            (PField) cloneNode(_field_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFieldList(this);
    }

    public PFieldList getFieldList()
    {
        return _fieldList_;
    }

    public void setFieldList(PFieldList node)
    {
        if(_fieldList_ != null)
        {
            _fieldList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _fieldList_ = node;
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public PField getField()
    {
        return _field_;
    }

    public void setField(PField node)
    {
        if(_field_ != null)
        {
            _field_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _field_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_fieldList_)
            + toString(_comma_)
            + toString(_field_);
    }

    void removeChild(Node child)
    {
        if(_fieldList_ == child)
        {
            _fieldList_ = null;
            return;
        }

        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if(_field_ == child)
        {
            _field_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_fieldList_ == oldChild)
        {
            setFieldList((PFieldList) newChild);
            return;
        }

        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(_field_ == oldChild)
        {
            setField((PField) newChild);
            return;
        }

    }
}
