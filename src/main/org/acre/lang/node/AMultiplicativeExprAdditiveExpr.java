/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class AMultiplicativeExprAdditiveExpr extends PAdditiveExpr
{
    private PMultiplicativeExpr _multiplicativeExpr_;

    public AMultiplicativeExprAdditiveExpr()
    {
    }

    public AMultiplicativeExprAdditiveExpr(
        PMultiplicativeExpr _multiplicativeExpr_)
    {
        setMultiplicativeExpr(_multiplicativeExpr_);

    }
    public Object clone()
    {
        return new AMultiplicativeExprAdditiveExpr(
            (PMultiplicativeExpr) cloneNode(_multiplicativeExpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultiplicativeExprAdditiveExpr(this);
    }

    public PMultiplicativeExpr getMultiplicativeExpr()
    {
        return _multiplicativeExpr_;
    }

    public void setMultiplicativeExpr(PMultiplicativeExpr node)
    {
        if(_multiplicativeExpr_ != null)
        {
            _multiplicativeExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _multiplicativeExpr_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_multiplicativeExpr_);
    }

    void removeChild(Node child)
    {
        if(_multiplicativeExpr_ == child)
        {
            _multiplicativeExpr_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_multiplicativeExpr_ == oldChild)
        {
            setMultiplicativeExpr((PMultiplicativeExpr) newChild);
            return;
        }

    }
}
