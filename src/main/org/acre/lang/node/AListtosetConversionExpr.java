/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class AListtosetConversionExpr extends PConversionExpr
{
    private TListtoset _listtoset_;
    private TBracketL _bracketL_;
    private PQueryRestricted _queryRestricted_;
    private TBracketR _bracketR_;

    public AListtosetConversionExpr()
    {
    }

    public AListtosetConversionExpr(
        TListtoset _listtoset_,
        TBracketL _bracketL_,
        PQueryRestricted _queryRestricted_,
        TBracketR _bracketR_)
    {
        setListtoset(_listtoset_);

        setBracketL(_bracketL_);

        setQueryRestricted(_queryRestricted_);

        setBracketR(_bracketR_);

    }
    public Object clone()
    {
        return new AListtosetConversionExpr(
            (TListtoset) cloneNode(_listtoset_),
            (TBracketL) cloneNode(_bracketL_),
            (PQueryRestricted) cloneNode(_queryRestricted_),
            (TBracketR) cloneNode(_bracketR_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListtosetConversionExpr(this);
    }

    public TListtoset getListtoset()
    {
        return _listtoset_;
    }

    public void setListtoset(TListtoset node)
    {
        if(_listtoset_ != null)
        {
            _listtoset_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _listtoset_ = node;
    }

    public TBracketL getBracketL()
    {
        return _bracketL_;
    }

    public void setBracketL(TBracketL node)
    {
        if(_bracketL_ != null)
        {
            _bracketL_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _bracketL_ = node;
    }

    public PQueryRestricted getQueryRestricted()
    {
        return _queryRestricted_;
    }

    public void setQueryRestricted(PQueryRestricted node)
    {
        if(_queryRestricted_ != null)
        {
            _queryRestricted_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _queryRestricted_ = node;
    }

    public TBracketR getBracketR()
    {
        return _bracketR_;
    }

    public void setBracketR(TBracketR node)
    {
        if(_bracketR_ != null)
        {
            _bracketR_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _bracketR_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_listtoset_)
            + toString(_bracketL_)
            + toString(_queryRestricted_)
            + toString(_bracketR_);
    }

    void removeChild(Node child)
    {
        if(_listtoset_ == child)
        {
            _listtoset_ = null;
            return;
        }

        if(_bracketL_ == child)
        {
            _bracketL_ = null;
            return;
        }

        if(_queryRestricted_ == child)
        {
            _queryRestricted_ = null;
            return;
        }

        if(_bracketR_ == child)
        {
            _bracketR_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_listtoset_ == oldChild)
        {
            setListtoset((TListtoset) newChild);
            return;
        }

        if(_bracketL_ == oldChild)
        {
            setBracketL((TBracketL) newChild);
            return;
        }

        if(_queryRestricted_ == oldChild)
        {
            setQueryRestricted((PQueryRestricted) newChild);
            return;
        }

        if(_bracketR_ == oldChild)
        {
            setBracketR((TBracketR) newChild);
            return;
        }

    }
}
