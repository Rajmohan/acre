/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class AUndefineQuery extends PUndefineQuery
{
    private TUndefine _undefine_;
    private TTquery _tquery_;
    private TIdentifier _identifier_;

    public AUndefineQuery()
    {
    }

    public AUndefineQuery(
        TUndefine _undefine_,
        TTquery _tquery_,
        TIdentifier _identifier_)
    {
        setUndefine(_undefine_);

        setTquery(_tquery_);

        setIdentifier(_identifier_);

    }
    public Object clone()
    {
        return new AUndefineQuery(
            (TUndefine) cloneNode(_undefine_),
            (TTquery) cloneNode(_tquery_),
            (TIdentifier) cloneNode(_identifier_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUndefineQuery(this);
    }

    public TUndefine getUndefine()
    {
        return _undefine_;
    }

    public void setUndefine(TUndefine node)
    {
        if(_undefine_ != null)
        {
            _undefine_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _undefine_ = node;
    }

    public TTquery getTquery()
    {
        return _tquery_;
    }

    public void setTquery(TTquery node)
    {
        if(_tquery_ != null)
        {
            _tquery_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tquery_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_undefine_)
            + toString(_tquery_)
            + toString(_identifier_);
    }

    void removeChild(Node child)
    {
        if(_undefine_ == child)
        {
            _undefine_ = null;
            return;
        }

        if(_tquery_ == child)
        {
            _tquery_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_undefine_ == oldChild)
        {
            setUndefine((TUndefine) newChild);
            return;
        }

        if(_tquery_ == oldChild)
        {
            setTquery((TTquery) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

    }
}
