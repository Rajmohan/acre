/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.acre.lang.node;

import java.util.*;
import org.acre.lang.analysis.*;

public final class AModMultiplicativeExpr extends PMultiplicativeExpr
{
    private PMultiplicativeExpr _multiplicativeExpr_;
    private TMod _mod_;
    private PTmpInExpr _tmpInExpr_;

    public AModMultiplicativeExpr()
    {
    }

    public AModMultiplicativeExpr(
        PMultiplicativeExpr _multiplicativeExpr_,
        TMod _mod_,
        PTmpInExpr _tmpInExpr_)
    {
        setMultiplicativeExpr(_multiplicativeExpr_);

        setMod(_mod_);

        setTmpInExpr(_tmpInExpr_);

    }
    public Object clone()
    {
        return new AModMultiplicativeExpr(
            (PMultiplicativeExpr) cloneNode(_multiplicativeExpr_),
            (TMod) cloneNode(_mod_),
            (PTmpInExpr) cloneNode(_tmpInExpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAModMultiplicativeExpr(this);
    }

    public PMultiplicativeExpr getMultiplicativeExpr()
    {
        return _multiplicativeExpr_;
    }

    public void setMultiplicativeExpr(PMultiplicativeExpr node)
    {
        if(_multiplicativeExpr_ != null)
        {
            _multiplicativeExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _multiplicativeExpr_ = node;
    }

    public TMod getMod()
    {
        return _mod_;
    }

    public void setMod(TMod node)
    {
        if(_mod_ != null)
        {
            _mod_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _mod_ = node;
    }

    public PTmpInExpr getTmpInExpr()
    {
        return _tmpInExpr_;
    }

    public void setTmpInExpr(PTmpInExpr node)
    {
        if(_tmpInExpr_ != null)
        {
            _tmpInExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tmpInExpr_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_multiplicativeExpr_)
            + toString(_mod_)
            + toString(_tmpInExpr_);
    }

    void removeChild(Node child)
    {
        if(_multiplicativeExpr_ == child)
        {
            _multiplicativeExpr_ = null;
            return;
        }

        if(_mod_ == child)
        {
            _mod_ = null;
            return;
        }

        if(_tmpInExpr_ == child)
        {
            _tmpInExpr_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_multiplicativeExpr_ == oldChild)
        {
            setMultiplicativeExpr((PMultiplicativeExpr) newChild);
            return;
        }

        if(_mod_ == oldChild)
        {
            setMod((TMod) newChild);
            return;
        }

        if(_tmpInExpr_ == oldChild)
        {
            setTmpInExpr((PTmpInExpr) newChild);
            return;
        }

    }
}
