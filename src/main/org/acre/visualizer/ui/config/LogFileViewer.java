/**
 *   Copyright 2004-2005 Sun Microsystems, Inc.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package org.acre.visualizer.ui.config;

import org.acre.config.ConfigService;

import javax.swing.JDialog;
import javax.swing.JFrame;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.logging.Logger;

/**
 *
 * @author  Administrator
 */
public class LogFileViewer extends javax.swing.JPanel {
    private boolean testing;
    private static Logger logger;

    /** Creates new form LogFileViewer */
    public LogFileViewer() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        logFileHeaderLabel = new javax.swing.JLabel();
        logScroll = new javax.swing.JScrollPane();
        logTextPane = new javax.swing.JTextPane();
        buttonPanel = new javax.swing.JPanel();
        clearLogButton = new javax.swing.JButton();
        refreshLogButton = new javax.swing.JButton();
        closeLogButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        logFileHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logFileHeaderLabel.setText("Log File Contents");
        add(logFileHeaderLabel, java.awt.BorderLayout.NORTH);

        logTextPane.setEditable(false);
        logTextPane.setToolTipText("Log File Contents");
        logScroll.setViewportView(logTextPane);

        add(logScroll, java.awt.BorderLayout.CENTER);

        clearLogButton.setText("Clear Log");
        clearLogButton.setToolTipText("Clears / Erases the Log File Content");
        clearLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearLogButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(clearLogButton);

        refreshLogButton.setText("Refresh Log");
        refreshLogButton.setToolTipText("Reloads the log file from disk");
        refreshLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshLogButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(refreshLogButton);

        closeLogButton.setText("Close");
        closeLogButton.setToolTipText("Closes Log Viewer window");
        closeLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeLogButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(closeLogButton);

        add(buttonPanel, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void closeLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeLogButtonActionPerformed
        closeLog();
    }//GEN-LAST:event_closeLogButtonActionPerformed

    private void refreshLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshLogButtonActionPerformed
        refreshLog();
    }//GEN-LAST:event_refreshLogButtonActionPerformed

    private void clearLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearLogButtonActionPerformed
        clearLog();
    }//GEN-LAST:event_clearLogButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton clearLogButton;
    private javax.swing.JButton closeLogButton;
    private javax.swing.JLabel logFileHeaderLabel;
    private javax.swing.JScrollPane logScroll;
    private javax.swing.JTextPane logTextPane;
    private javax.swing.JButton refreshLogButton;
    // End of variables declaration//GEN-END:variables

    javax.swing.JDialog myDialog;

    public void setDialog(JDialog logFileDialog) {
        initLogger();
        this.myDialog = logFileDialog;
    }

    public JDialog getDialog() {
        return myDialog;
    }

    private void initLogger() {
        if (logger == null)
            logger = ConfigService.getInstance().getLogger(this);
    }

    public void loadLog() {
        initLogger();
        try {
            String file = ConfigService.getInstance().getConfigData().getLogFilePath();
            File f = new File(file);
            if (f.exists()) {
                FileReader fr = new FileReader(f);
                BufferedReader reader = new BufferedReader(fr);
                logTextPane.read(reader, "Log File");
                reader.close();
                fr.close();
            }
        } catch (Throwable t) {
            logTextPane.setText("Exception Occurred during log view: \n" +
                    t.getMessage() + "\n" +
                    t.toString() + "\n");
        }
    }

    private void closeLog() {
        if (myDialog!=null)
            myDialog.hide();
    }

    private void refreshLog() {
        loadLog();
    }

    private void clearLog() {
        logTextPane.setText("");
        ConfigService.getInstance().eraseLogFile();
    }

    private void writeTestMessages() {
        initLogger();
        logger.info("Test Log File Viewer");
        logger.warning("Test Log File Viewer");
        logger.severe("Test Log File Viewer");
    }

    public static void main(String args []) {
        JFrame frame = new JFrame();

        LogFileViewer v = new LogFileViewer();
        v.setPreferredSize(new Dimension(800, 400));
        v.initLogger();
        v.writeTestMessages();
        v.loadLog();

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add(v);
        frame.pack();
        frame.setVisible(true);


    }

}
