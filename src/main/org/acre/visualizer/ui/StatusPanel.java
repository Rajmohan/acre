/**
 *   Copyright 2004-2005 Sun Microsystems, Inc.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package org.acre.visualizer.ui;

import javax.swing.JFrame;

/**
 *
 * @author  Administrator
 */
public class StatusPanel extends javax.swing.JPanel {
    
    /** Creates new form StatusPanel */
    public StatusPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        msgPanel = new javax.swing.JPanel();
        statusMessage = new javax.swing.JTextField();
        iconPanel = new javax.swing.JPanel();
        statusSep = new javax.swing.JSeparator();
        statusProgressBar = new javax.swing.JProgressBar();
        progStatusSep = new javax.swing.JSeparator();
        viewLogButton = new javax.swing.JButton();
        configButton = new javax.swing.JButton();
        gcButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(800, 24));
        msgPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        statusMessage.setColumns(80);
        statusMessage.setEditable(false);
        statusMessage.setText("Ready");
        statusMessage.setToolTipText("Status");
        statusMessage.setBorder(new javax.swing.border.EtchedBorder());
        statusMessage.setMargin(new java.awt.Insets(0, 0, 0, 0));
        statusMessage.setPreferredSize(new java.awt.Dimension(700, 18));
        statusMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusMessageActionPerformed(evt);
            }
        });

        msgPanel.add(statusMessage);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(msgPanel, gridBagConstraints);

        iconPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 0, 0));

        statusSep.setOrientation(javax.swing.SwingConstants.VERTICAL);
        statusSep.setBorder(new javax.swing.border.EtchedBorder());
        statusSep.setPreferredSize(new java.awt.Dimension(1, 18));
        iconPanel.add(statusSep);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 5);
        add(iconPanel, gridBagConstraints);

        statusProgressBar.setPreferredSize(new java.awt.Dimension(50, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(statusProgressBar, gridBagConstraints);

        progStatusSep.setOrientation(javax.swing.SwingConstants.VERTICAL);
        progStatusSep.setBorder(new javax.swing.border.EtchedBorder());
        progStatusSep.setPreferredSize(new java.awt.Dimension(1, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 5);
        add(progStatusSep, gridBagConstraints);

        viewLogButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/acre/visualizer/ui/icons/buttons/NoErrors.gif")));
        viewLogButton.setToolTipText("View Log File");
        viewLogButton.setBorderPainted(false);
        viewLogButton.setFocusable(false);
        viewLogButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        viewLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewLogButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(viewLogButton, gridBagConstraints);

        configButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/acre/visualizer/ui/icons/buttons/Settings.gif")));
        configButton.setToolTipText("Configuration");
        configButton.setBorderPainted(false);
        configButton.setFocusable(false);
        configButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        configButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(configButton, gridBagConstraints);

        gcButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/acre/visualizer/ui/icons/buttons/GarbageCan.gif")));
        gcButton.setToolTipText("Run GC");
        gcButton.setBorderPainted(false);
        gcButton.setFocusable(false);
        gcButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gcButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(gcButton, gridBagConstraints);

    }//GEN-END:initComponents

    private void viewLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewLogButtonActionPerformed
        if (Main.getMDIFrame() != null) {
            Main.getMDIFrame().showLogViewer();
        }
        clearLogUpdated();
    }//GEN-LAST:event_viewLogButtonActionPerformed

    private void gcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gcButtonActionPerformed
        if (Main.getMDIFrame() != null) {
            Main.getMDIFrame().runGC();
        }
    }//GEN-LAST:event_gcButtonActionPerformed

    private void configButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configButtonActionPerformed
        if (Main.getMDIFrame() != null) {
            Main.getMDIFrame().showSettings();
        }
    }//GEN-LAST:event_configButtonActionPerformed

    private void statusMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusMessageActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton configButton;
    private javax.swing.JButton gcButton;
    private javax.swing.JPanel iconPanel;
    private javax.swing.JPanel msgPanel;
    private javax.swing.JSeparator progStatusSep;
    private javax.swing.JTextField statusMessage;
    private javax.swing.JProgressBar statusProgressBar;
    private javax.swing.JSeparator statusSep;
    private javax.swing.JButton viewLogButton;
    // End of variables declaration//GEN-END:variables

    private StatusBarUpdater updater;
    private Thread updaterThread;

    public void setMessage(String message) {
        if (message != null)
            this.statusMessage.setText(message);
        else
            this.statusMessage.setText("Ready");
    }

    public void initUpdater() {
        //viewLogButton.setIcon(null);
        if (updater == null)
            updater = new StatusBarUpdater(this);
    }

    public void startUpdater() {
        updaterThread = new Thread(updater);
        updaterThread.start();
    }

    public void stopUpdater() {
        //todo
    }

    public void setLogUpdated() {
        viewLogButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/acre/visualizer/ui/icons/buttons/Errors.gif")));
        viewLogButton.revalidate();
    }

    public void clearLogUpdated() {
        //viewLogButton.setIcon(null);
        viewLogButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/acre/visualizer/ui/icons/buttons/NoErrors.gif")));
        updater.setLogViewed(true);
    }

    public static void main(String args[]) {
        StatusPanel panel = new StatusPanel();
        JFrame frame = new JFrame("Status Panel");
        frame.getContentPane().add(panel);
        frame.pack();
        frame.setVisible(true);
        panel.initUpdater();
        panel.startUpdater();
        try {
            Thread.sleep(60000);
        } catch (InterruptedException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        }
        panel.stopUpdater();
    }
}
